CHANGES TO BE DONE IN SOC:
1. When creating Flat:
    when wings get created i need to add user with that flat name:
        i. flat name.
        ii. flat name + member name (unique name to make it as user name).
        iii. Example:
            Flat_id: A-WING-1
            Name: AWING1FAREEN

2. For Flat Details -> on view -> flat_status is not fetching from serializers
3. COUNTRY STATE API
4. SOME ISSUE IN COST CENTER MODAL

Bug fixes:
DropDown value not getting
history accordian(show date to date)
view file on edit
in table show just file name
In meetings edit show attendance
at the time of add or update give toastr and page refresh
change all the table heading
add nominees should come only when required
1. Add vehicle - doc not getting add
2. sweet alert not working
3. make pan and aadhar unitque

ADD FEATURES LATER:
1. Login
2. Authentication/Authorization (login)
3. Mobile app
4. Delete functionality for all the


========================================ACCOUNTS============================================================

1. Group Creation:
Sub group -> parent(Assets)
Under group -> child (Fixed Assets)
Group Name -> sub child (Computer)


IN VOUCHER CREATION

Against Refrence:
Voucher number:
amount:

1. Journal voucher - should have all the created vouchers - debit and credit.
2. Sales/Income - fetch will be in receipt.
3. Purchase/Expense - fetch will be in payment.



==================================== ************ ===================================================
1. Can more than one bank be primary.

=================================== ********* =====================================================
                                    PRIORITY


IN voucher creation on save 4 actions are getting performed:
1. save the voucher itself data.
2. create general entry for all those ledgers.
3. calculation of debit and credit amount to show running balance.
4. show that running balance on balance sheet.



Either show 2 entries for tds payable onw ith dr and one with cr.





TEST CASES:
case 1:
dr
cr


case 2: NOT
dr
cr
cr


case 3:
cr
dr
dr


case 4:
dr
dr
dr
cr
cr
cr


case 5:
dr
cr
cr
cr



======================================================================================
FOR BALANCE AMT:

1. opitimize code,
2. apply rule.
3. calculate amt:
    if amt directly,
    if amount is Dr +, Cr -, then
    cr = -5000
    dr = +6000
    then take amt directly, like
    - 5000 + 6000





===============================running balance in p & l===============================================
when we select the date filter from p and l date DropDown, it should show the running balance of that date:
for example i have GL entries as:

2024-08-11	HDFC Acc.	Nitesh	expenses_voucher	        1		5000	                5000
2024-08-10	HDFC Acc.	Zaco Info Tech	expenses_voucher	1	    5000		            10000
2024-08-09	HDFC Acc.	Taori Marketing	expenses_voucher	1	        		8000        2000
2024-08-09	HDFC Acc.	Sameer	expenses_voucher	        1		1000	                3000


i made filter date as "2024-08-09" i should get below amt, i.e 7000 and not above 3000:
2024-08-09	HDFC Acc.	Taori Marketing	expenses_voucher	1	        		8000        8000
2024-08-09	HDFC Acc.	Sameer	expenses_voucher	        1		1000	                7000



======================================================= BALANCE SHEET VIEW ====================================================================

+ Current Assets
    + Vikas
    + Neha
        + GST         90000
            - CGST  - 30000
            - SGST  - 40000



===================================================== VUE CDN EXAMPLE ===========================================

new Vue({
    el: '#app',
    data: {
    },
    created: {
    },
    methods: {
    },
    mounted: {
    }
});







\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
CASE 1:
========

Current Assets
    + Sundry Debitors(30000)
        -> Vikas (Legder)  -- (30000)

            + Vikas(2700)
                --> Input SGST -- (2700)

                    + Vikas 1(-20000)
                        -> Dena Bank -- (-20000)

                            + Vikas 2(62600)
                                + Misc Assets(62600)
                                    -> Cash Account -- (62600)

    + Tax(2700)
        + GST(2700)
            + Payable Tax(2700)
                --> Input CGST -- (2700)




CASE 2:
=======

Current Assets (78000)
    + Sundry Debitors(75300)
        -> Vikas (Legder)  -- (30000)

            + Vikas(45300)
                --> Input SGST -- (2700)

                    + Vikas 1(42600)
                        -> Dena Bank -- (-20000)

                            + Vikas 2(62600)
                                + Misc Assets(62600)
                                    -> Cash Account -- (62600)

    + Tax(2700)
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\




CASE 1:
========

Current Assets
    + Sundry Debitors(30000)
        -> Vikas (Legder)  -- (30000)

            + Vikas(2700)
                --> Input SGST -- (2700)

                    + Vikas 1(-20000)
                        -> Dena Bank -- (-20000)

                            + Vikas 2(62600)
                                + Misc Assets(62600)
                                    -> Cash Account -- (62600)

    + Tax(2700)
        + GST(2700)
            + Payable Tax(2700)
                --> Input CGST -- (2700)


CASE 2:
=======

Current Assets (78000)
    + Sundry Debitors(75300)
        -> Vikas (Legder)  -- (30000)

            + Vikas(45300)
                --> Input SGST -- (2700)

                    + Vikas 1(42600)
                        -> Dena Bank -- (-20000)

                            + Vikas 2(62600)
                                + Misc Assets(62600)
                                    -> Cash Account -- (62600)

    + Tax(2700)
        + GST(2700)
            + Payable Tax(2700)
                --> Input CGST -- (2700)






Current Assest
→ Sundry Debtors
→→ Vikas
→→→ Vikas 1
→→→→ Vikas 2
→→→→→ Misc Assets
→ Input Sgst
→ Gst Input
→ Tax
→→ Gst
→→→ Payable Tax
→→→→ Input Cgst


1. Misc Assets (62600)
2. Vikas 2(62600)
3. Vikas 1(42600)



1. add dict in the order position, like if "Misc Assets" add it to 5th position.
2. take the grops from bottom, even if it does not have sub grp or ledgers.
3. loop over the given dict and show the data.
4. add dummy data and try on ui.
5. try below json as an api in vue, if that works then create array if that.
6. first try the counter increment in vue js, consider below code:
        <template>
        <div>
            <div v-for="(counter, index) in counters" :key="index">
            <p>Counter {{ index + 1 }}: {{ cumulativeCounter(index) }}</p>
            </div>
        </div>
        </template>

        <script>
        export default {
            data() {
                return {
                counters: [20, 30, 40]  // Example counter values, replace with your API data
                };
            },
            methods: {
                cumulativeCounter(index) {
                let sum = 0;
                for (let i = 0; i <= index; i++) {
                    sum += this.counters[i];
                }
                return sum;
                }
            }
        };
        </script>



bkp:

[
    grp1: [
        "Input Cgst": 0, "ledger": [],
        "Payable Tax": 2700, "ledger": ["Input Cgst"],
        "Gst": 0, "ledger": [],             # add here
        "Tax": 0, "ledger": [],
    ],
    grp2: [
        "Gst Input": 0, "ledger": [],
    ],
    grp3: [
        "Input Sgst": 0, "ledger": [],
    ],
    grp3: [
        "Misc Assets": 62600, "ledger": ['Cash Account'],
        "Vikas 2": 62600, "ledger": [],
        "Vikas 1": -20000, "ledger": ['Dena Bank '],             # do addition here above all amt + this amt
        "Vikas": 2700, "ledger": ['Input SGST'],
        "Sundry Debtors": 30000, "ledger": ['Vikas (Legder)'],
    ],
]



const grp1 = {
            "Tax": {
                "amt": 0,
                "ledger": [],
                "Gst": {
                    "amt": 0,
                    "ledger": [],
                    "Payable Tax": {
                        "amt": 2700,
                        "ledger": ["Input Cgst"]
                    }
                }
            }
        };


[
    grp1: [
        "Input Cgst": {"ledger": [{}]},
        "Payable Tax": {"ledger": [{"Input Cgst": 2700}]},
        "Gst": {"ledger": []},             # add here
        "Tax": {"ledger": []},
    ],
    grp2: [
        "Gst Input": {"ledger": []},
    ],
    grp3: [
        "Input Sgst": {"ledger": []},
    ],
    grp3: [
        "Misc Assets": {"ledger": ['Cash Account': 62600]},
        "Vikas 2": {"ledger": []},
        "Vikas 1": {"ledger": ['Dena Bank': -20000]},             # do addition here above all amt + this amt
        "Vikas": {"ledger": ['Input SGST': 2700]},
        "Sundry Debtors": {"ledger": ['Vikas (Legder)': 30000]},
    ],
]







in vue js i want to show the above ledgers_grps array in a
table every new grp array is a new group so first group will be shown as:

1. if the first elemnt of a new grp array has no amt and has no ledger dont show it on table
2. for every new row, it should show the seperate grps,
3. if there is no ledger its parent should show the ledger amt, else sum up the below ledger amt and show above
4. above group should add elemnt as patent, like first Input CGST will be added as ledger and group name will be
Payable Tax & then GST and so on

5. so for first grp1 array the table will look likw below
+ Tax(2700)
    + GST(2700)
        + Payable Tax(2700)
            --> Input CGST -- (2700)






if elemnt is first and amout is 0 and have no ledger remove from the list


+ Sundry Debtors (75300)
    * Vikas (Legder) 30000

        + Vikas (45300)
            * Input SGST (2700)

                + Vikas 1 (-20000 + 62600)(42600)
                    * Dena Bank (-20000)

                        + Vikas 2 (62600)
                            + Misc Assets (62600)
                                * Cash Account (62600)



+ Tax(2700)
    + GST (2700)
        * Input Cgst (2700)
            + Payable Tax





Sundry Debtors
    * Vikas (Legder) - 30000
        -> Vikas (30000 + 2700) - (32700)
            -> Vikas 1
                * Dena Bank (32700 - 20000) ()










vendor name

purchase(*stock)
sale(*stock)



calculate_running_balance*(
    Ganesh,
    total amt of stock(debit),
    None(credit),
    get from GL
)




=======================================DATATABLE WARNING IN VOUCHER CREATION=============================
It is cuz the models have new fields added for stock, change it later.


PURCHASE
from_ledger = purchases
particular = Ganesh
debit amt =



from_ledger = Ganesh
particular = purchases
credit_amt =



SALES

from_ledger = sales
particular = Ganesh
credit amt =



from_ledger = Ganesh
particular = sales
debit amt =


{
    "stocks": [
        {
            "payment_option": "",
            "quantity": "10",
            "rate": "2",
            "amount": 20,
            "stock_name": 1
        },
        {
            "payment_option": "",
            "quantity": "20",
            "rate": "3",
            "amount": 60,
            "stock_name": 3
        }
    ],
    "voucher_name": "purchase_voucher",
    "vendor_name": "1",
    "voucher_type": 1,
    "voucher_number": 1,
    "booking_date": "2024-08-08",
    "invoice_date": "2024-07-21",
    "invoice_number": "445678",
    "total_purchases": 80,
    "amount_in_words": "eighty",
    "narration": "345678"
}



{
    "stocks": [
        {
            "payment_option": "",
            "quantity": "10",
            "rate": "20",
            "amount": 200,
            "stock_name": 1
        },
        {
            "payment_option": "",
            "quantity": "20",
            "rate": "20",
            "amount": 400,
            "stock_name": 1
        }
    ],
    "voucher_name": "sale_voucher",
    "vendor_name": "24",
    "voucher_type": 2,
    "voucher_number": 1,
    "booking_date": "2024-08-01",
    "invoice_date": "2024-07-27",
    "invoice_number": "45678",
    "total_purchases": 600,
    "amount_in_words": "six hundred",
    "narration": "3456789"
}



======================================================
opening balance:
date:
from_ledger: ledger name
particular: opening balance
balance: 0



MORE ACCOUNT PENDING:
voucher number increment
adding filter in balance sheet adn p & l
opening balance is different for p & l







======================================================
against Refrence  = 1
group data = 2
add one more option in ledger to ask for against refrence




















============================= ACCOUNTS FINAL PENDING ===================================================
1. voucher number increment - Done
2. adding filter in balance sheet adn p & l( for now add in p & l only ): Done
        --> add validation for date filter, provide both from and to date
        --> to date cannot be less than from data
3. opening balance is different for p & l
4. add in ledger model if against refrence should be shown: Done
---------------- Others -----------------------
5. check if group update is working.
6. add validation in sub group too.





get all the vouchers modal created for voucher number RVM-JULY-001	and do the increment from there,
if no vouchers are there in voucher create modal then take from indexing if not there also then defaul incr.

